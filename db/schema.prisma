datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
}

model Admin {
  id              String      @id @default(cuid())   
  name            String?
  email           String      @unique
  password        String 
  courses         Course[]
  candidates      Candidate[] 
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
}

model Course {
  id              String      @id @default(cuid())   
  name            String
  type            String
  description     String?
  location        String?
  startDate       DateTime?
  endDate         DateTime?
  active          Boolean     @default(true)
  admin           Admin       @relation(fields: [adminId], references: [id], onDelete: Cascade)
  adminId         String      // relation scalar field  (used in the `@relation` attribute above)
  results         Result[] 
  info            Json?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
}

model Result {
  id              String      @id @default(cuid())   
  course          Course      @relation(fields: [courseId], references: [id] , onDelete: Cascade)
  courseId        String      // relation scalar field  (used in the `@relation` attribute above)
  candidate       Candidate   @relation(fields: [candidateId], references: [id], onDelete: Cascade)
  candidateId     String      // relation scalar field  (used in the `@relation` attribute above)
  passDate        DateTime?   
  expiryDate      DateTime?    
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt

  @@unique([courseId, candidateId]) //Add constraint to avoid duplicates. Eg same candidate cannot be added multiple times.
}

model Candidate {
  id              String      @id @default(cuid())   
  name            String
  email           String?     @unique
  address         String? 
  telephoneNumber String?
  company         String?
  results         Result[]
  createdBy       Admin       @relation(fields: [createdById], references: [id], onDelete: Cascade)
  createdById     String      // relation scalar field  (used in the `@relation` attribute above)
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
}
